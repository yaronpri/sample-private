name: Simulation - CI process

env:
  PROJECT_NAME: 'simulation-generator'
  RESOURCE_GROUP: 'eventerim-rg'
  CLUSTER_NAME: 'eventerimaks'
  CONTAINER_REGISTRY: 'eventerimacr.azurecr.io'
  CLUSTER_REGISTRY_SECRET_NAME: 'registry-acr'
  NAMESPACE_NAME: 'eventrim'
on:
  workflow_dispatch:
    inputs:
      tags:
        required: false
        description: 'Test Manual'
  push:
    branches: 
      - main
    paths: 
      - 'code/Samples.Azure.Eventer.ServiceGenerator/**' 

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.CLIENTID }}
          password: ${{ secrets.CLIENTSECRET }} 
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build the Docker image
        run: |
          docker build ./code/Samples.Azure.Eventer.ServiceGenerator/ --file code/Samples.Azure.Eventer.ServiceGenerator/Dockerfile --tag ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          docker build ./code/Samples.Azure.Eventer.ServiceGenerator/ --file code/Samples.Azure.Eventer.ServiceGenerator/Dockerfile --tag ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_NAME }}:latest
      - name: Push the Docker image
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_NAME }}:latest
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ env.RESOURCE_GROUP }}' 
          cluster-name: '${{ env.CLUSTER_NAME }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v4
        with:
          secret-name: ${{ env.CLUSTER_REGISTRY_SECRET_NAME }}
          container-registry-url: ${{ env.CONTAINER_REGISTRY }}
          container-registry-username: ${{ secrets.CLIENTID }}
          container-registry-password: ${{ secrets.CLIENTSECRET }} 
        id: create-secret      
      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          strategy: basic
          action: deploy
          manifests: |
            deploy-simulation.yaml
          images: 
            '${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_NAME }}:${{ github.sha }}'
          imagepullsecrets: |
            ${{ env.CLUSTER_REGISTRY_SECRET_NAME }}
          